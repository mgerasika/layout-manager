{"version":3,"sources":["lib/icon/icon-close.svg","lib/icon/icon-drag-handle.svg","lib/icon.component.tsx","lib/card/card.component.tsx","lib/draggable/draggable.component.tsx","lib/droppable/droppable.component.tsx","lib/multi-droppable/multi-droppable.component.tsx","lib/layout/layout.component.tsx","lib/layout/layout-context.component.tsx","lib/generate-uid.util.ts","lib/layout/layout.hook.tsx","example/example-full.component.tsx","example/App.tsx","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","SvgIconClose","_ref","svgRef","title","titleId","props","width","height","viewBox","ref","id","ForwardRef","SvgIconDragHandle","ICONS","CLOSE","DRAG_HANDLE","Icon","name","size","color","backgroundColor","useMemo","className","style","Card","count","leftIcon","cn","children","onCloseClick","classNames","onClick","Draggable","info","isCustomDragElement","renderContent","onMove","onDragStart","refIsDragStarted","useRef","useDraggable","JSON","stringify","attributes","listeners","setNodeRef","transform","node","isDragging","getStyle","type","undefined","useEffect","current","draggableEl","includes","parentElement","draggableProps","Child","React","memo","x","y","right","zIndex","bottom","Droppable","useDroppable","isOver","display","EDropArea","MultiDroppable","dropArea","Top","Left","Right","Bottom","opacity","PRIVATE_SYMBOL","Symbol","EMPTY_VIEW_NAME","Layout","renderView","useContext","LayoutResultContext","layout","dragInfo","closeView","layoutRows","rows","doStartDrag","doDragStart","cells","viewName","notEmptyRows","filter","f","renderCells","nested","result","map","cell","index","renderCellContent","handleDragStart","isLastCell","tempId","useCallback","renderRows","renderViewComponent","row","isLastRow","LayoutRow","minHeight","maxHeight","LayoutCell","flexBasis","maxWidth","RowSeparator","dragging","CellSeparator","LayoutView","LayoutContext","setDragInfo","moveView","resizeCell","resizeRow","parentSizeRef","currentSizeRef","draggableElementRef","layoutRectMapRef","layoutContext","parent","findParentByClassName","offsetLeft","offsetTop","offsetWidth","offsetHeight","handleClear","getLayoutRectangles","Array","from","rect","get","parse","modifiers","draggingNodeRect","e","active","onDragMove","droppableRects","onDragEnd","over","delta","parentRect","currentRect","layoutRectangles","dropInfo","onDragCancel","Provider","value","createContext","console","log","element","parentNode","IDX","generateUID","cloneRows","findViewInCells","rowIndex","view","cellIndex","len","findView","normalizeLayout","removeExtraRowsAndEmptyCells","removeWidthAndHeight","forEach","temp","removeExtraRowsAndEmptyCellsInternal","push","removeWidthAndHeightInternal","currentRow","childCell","childRow","findByTempId","some","EViewName","CodeEditor","Terminal","SolutionExplorer","Questions","Chat","EXAMPLE_LAYOUT","ExampleFull","defaultLayout","allViews","allViewNames","useState","setRows","findResult","rectangles","rectangle","cellRect","find","percentage","Math","max","min","rowRect","hiddenViews","fromViewName","toViewName","position","newRows","toView","fromView","c","splice","resetLayout","useLayout","values","handleCloseClick","handleResetLayout","App","fallback","pointerEvents","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d058f405.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.5919 12.0002L20.6702 4.92162C21.1099 4.48221 21.1099 3.76925 20.6702 3.32984C20.2304 2.89005 19.5182 2.89005 19.0785 3.32984L12.0002 10.4084L4.92154 3.32984C4.48177 2.89005 3.76959 2.89005 3.32982 3.32984C2.89006 3.76925 2.89006 4.48221 3.32982 4.92162L10.4085 12.0002L3.32982 19.0788C2.89006 19.5182 2.89006 20.2311 3.32982 20.6705C3.54971 20.8901 3.83788 21 4.12568 21C4.41348 21 4.70165 20.8901 4.92154 20.6702L12.0002 13.5916L19.0785 20.6702C19.2983 20.8901 19.5865 21 19.8743 21C20.1621 21 20.4503 20.8901 20.6702 20.6702C21.1099 20.2308 21.1099 19.5178 20.6702 19.0784L13.5919 12.0002Z\",\n  fill: \"#878793\"\n});\n\nfunction SvgIconClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconClose);\nexport default __webpack_public_path__ + \"static/media/icon-close.cc0fc59e.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2 4C3.10457 4 4 3.10457 4 2C4 0.895431 3.10457 0 2 0C0.895431 0 0 0.895431 0 2C0 3.10457 0.895431 4 2 4Z\",\n  fill: \"#908CA0\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 4C9.10457 4 10 3.10457 10 2C10 0.895431 9.10457 0 8 0C6.89543 0 6 0.895431 6 2C6 3.10457 6.89543 4 8 4Z\",\n  fill: \"#908CA0\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 9C4 10.1046 3.10457 11 2 11C0.895431 11 0 10.1046 0 9C0 7.89543 0.895431 7 2 7C3.10457 7 4 7.89543 4 9Z\",\n  fill: \"#908CA0\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 11C9.10457 11 10 10.1046 10 9C10 7.89543 9.10457 7 8 7C6.89543 7 6 7.89543 6 9C6 10.1046 6.89543 11 8 11Z\",\n  fill: \"#908CA0\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 16C4 17.1046 3.10457 18 2 18C0.895431 18 0 17.1046 0 16C0 14.8954 0.895431 14 2 14C3.10457 14 4 14.8954 4 16Z\",\n  fill: \"#908CA0\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 18C9.10457 18 10 17.1046 10 16C10 14.8954 9.10457 14 8 14C6.89543 14 6 14.8954 6 16C6 17.1046 6.89543 18 8 18Z\",\n  fill: \"#908CA0\"\n});\n\nfunction SvgIconDragHandle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 18,\n    viewBox: \"0 0 10 18\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconDragHandle);\nexport default __webpack_public_path__ + \"static/media/icon-drag-handle.feb004b4.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useMemo } from \"react\";\nimport { ReactComponent as Close } from \"./icon/icon-close.svg\";\nimport { ReactComponent as DragHandle } from \"./icon/icon-drag-handle.svg\";\n\nexport const ICONS = {\n  CLOSE: \"CLOSE\",\n  DRAG_HANDLE: \"DRAG_HANDLE\",\n};\n\nexport type IconType = keyof typeof ICONS;\n\ninterface Props {\n  name: string;\n  size: number;\n  color: string;\n  backgroundColor?: string;\n}\n\nexport function Icon(props: Props): JSX.Element {\n  const { name, size, color, backgroundColor = \"transparent\" } = props;\n\n  return useMemo(() => {\n    switch (name) {\n      case ICONS.CLOSE:\n        return (\n          <Close\n            id=\"icon-close\"\n            className={color}\n            height={size}\n            width={size}\n            style={{ backgroundColor }}\n          />\n        );\n\n      case ICONS.DRAG_HANDLE:\n        return (\n          <DragHandle\n            id=\"icon-drag-handle\"\n            className={color}\n            height={size}\n            width={size}\n            style={{ backgroundColor }}\n          />\n        );\n\n      default:\n        return <></>;\n    }\n  }, [name, size, color, backgroundColor]);\n}\n","import classNames from \"classnames\";\nimport React, { ReactNode } from \"react\";\nimport { Icon, ICONS, IconType } from \"../icon.component\";\nimport \"./card.scss\";\n\ninterface Props {\n  leftIcon?: IconType | JSX.Element;\n  title: string;\n  count?: number;\n  children: ReactNode;\n  className?: string;\n  onCloseClick?: () => void;\n}\nexport const Card = ({\n  title,\n  count,\n  leftIcon,\n  className: cn,\n  children,\n  onCloseClick,\n}: Props): JSX.Element => {\n  const renderLeftIcon = (): JSX.Element | null => {\n    if (!leftIcon) {\n      return null;\n    }\n    if (typeof leftIcon === \"string\") {\n      return (\n        <div className=\"card-header-icon\">\n          <Icon name={ICONS[leftIcon]} color={\"white\"} size={16} />\n        </div>\n      );\n    }\n    return <div className=\"card-header-icon\">{leftIcon}</div>;\n  };\n\n  return (\n    <div className={classNames(\"card\", cn)}>\n      <div className=\"card-header\">\n        {renderLeftIcon()}\n        <div className=\"card-title\">\n          {title}\n          {count && <span className=\"count\">{count}</span>}\n        </div>\n        <button\n          className=\"card-btn-close no-style round\"\n          onClick={onCloseClick}\n        >\n          <Icon name={ICONS.CLOSE} color={\"white\"} size={16} />\n        </button>\n      </div>\n      <div className=\"card-body\">{children}</div>\n    </div>\n  );\n};\n","import { useDraggable } from \"@dnd-kit/core\";\nimport classNames from \"classnames\";\nimport React, { ReactNode, useEffect, useMemo, useRef } from \"react\";\nimport { IDragInfo } from \"../layout/layout.hook\";\n\nexport type DraggableProps = ReturnType<typeof useDraggable>[\"listeners\"] &\n  ReturnType<typeof useDraggable>[\"attributes\"] & {\n    ref: ReturnType<typeof useDraggable>[\"setNodeRef\"];\n  };\ninterface Props {\n  className?: string;\n  info: IDragInfo;\n  isCustomDragElement?: boolean;\n  children?: ReactNode;\n  renderContent?: (props: DraggableProps) => ReactNode;\n  onMove?: (props: { x: number; y: number }) => void;\n  onDragStart?: (props: {\n    info: IDragInfo;\n    node: React.MutableRefObject<HTMLElement | null>;\n  }) => void;\n}\nexport function Draggable({\n  info,\n  isCustomDragElement,\n  renderContent,\n  children,\n  className,\n  onMove,\n  onDragStart,\n}: Props): JSX.Element {\n  const refIsDragStarted = useRef(false);\n  const { attributes, listeners, setNodeRef, transform, node } = useDraggable({\n    id: JSON.stringify(info),\n  });\n\n  const isDragging = !!transform;\n  const style = useMemo(\n    () => (transform ? getStyle(isDragging, info.type, transform) : undefined),\n    [isDragging, info, transform]\n  );\n\n  useEffect(() => {\n    if (onMove && transform) {\n      onMove(transform);\n    }\n  }, [transform, onMove]);\n\n  useEffect(() => {\n    if (!transform) {\n      refIsDragStarted.current = false;\n    }\n  }, [transform]);\n\n  useEffect(() => {\n    if (isDragging && onDragStart && !refIsDragStarted.current) {\n      let draggableEl: HTMLElement | null = node.current;\n      while (draggableEl) {\n        if (draggableEl.className.includes(\"draggable\")) {\n          onDragStart({\n            node: ({ current: draggableEl } as unknown) as any,\n            info,\n          });\n\n          refIsDragStarted.current = true;\n          break;\n        }\n        draggableEl = draggableEl?.parentElement;\n      }\n    }\n  }, [node, isDragging, onDragStart, info]);\n\n  const draggableProps = useMemo<DraggableProps>((): DraggableProps => {\n    return {\n      ...listeners,\n      ...attributes,\n      ref: setNodeRef,\n    } as DraggableProps;\n  }, [listeners, attributes, setNodeRef]);\n\n  const Child = useMemo(() => {\n    return React.memo(\n      function Content() {\n        return <>{renderContent ? renderContent(draggableProps) : children}</>;\n      },\n      () => isDragging || false\n    );\n  }, [isDragging, children, renderContent, draggableProps]);\n\n  return (\n    <div\n      className={classNames(\"draggable d-flex full-height\", className)}\n      style={{ ...style }}\n      {...(isCustomDragElement ? {} : draggableProps)}\n    >\n      <Child />\n    </div>\n  );\n}\n\nconst getStyle = (\n  isDragging: boolean | undefined,\n  type: IDragInfo[\"type\"],\n  transform: { x: number; y: number }\n): React.CSSProperties => {\n  switch (type) {\n    case \"move\":\n      return {\n        transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n      };\n\n    case \"resize-cell\":\n      return {\n        right: `${transform.x * -1}px`,\n        zIndex: isDragging ? 999 : undefined,\n      };\n\n    case \"resize-row\":\n      return {\n        bottom: `${transform.y * -1}px`,\n        zIndex: isDragging ? 999 : undefined,\n      };\n  }\n  return {};\n};\n","import { useDroppable } from '@dnd-kit/core';\nimport { ReactNode } from 'react';\nimport { IDropInfo } from '../layout/layout.hook';\n\nimport './droppable.scss';\n\ninterface Props {\n\tinfo: IDropInfo;\n\tchildren?: ReactNode;\n\tisDragging?: boolean;\n}\nexport  function Droppable({info, children}: Props): JSX.Element {\n\tconst { isOver, setNodeRef } = useDroppable({\n\t\tid : JSON.stringify(info),\n\t});\n\tconst style = {\n\t\tdisplay: isOver ? 'block' : 'none',\n\t} as React.CSSProperties;\n\n\treturn (\n\t\t<div className=\"droppable\" ref={setNodeRef}>\n\t\t\t<div className=\"droppable-hover\" style={style}></div>\n\t\t\t{children}\n\t\t</div>\n\t\t\n\t);\n}\n","import { Droppable } from \"../droppable/droppable.component\";\nimport \"./multi-droppable.scss\";\n\nexport enum EDropArea {\n  Top = \"Top\",\n  Left = \"Left\",\n  Right = \"Right\",\n  Bottom = \"Bottom\",\n}\ninterface Props {\n  id: string;\n  className?: string;\n  isDragging?: boolean;\n  children: JSX.Element;\n}\nexport function MultiDroppable({\n  children,\n  id,\n  isDragging,\n}: Props): JSX.Element {\n  return (\n    <div className=\"full-height relative\">\n      {isDragging && (\n        <div className=\"multi-droppable\">\n          <div className=\"multi-droppable-sector top\">\n            <Droppable\n              info={{ id: id, dropArea: EDropArea.Top }}\n              isDragging={isDragging}\n            />\n          </div>\n          <div className=\"d-flex multi-droppable-sector central\">\n            <Droppable\n              info={{ id: id, dropArea: EDropArea.Left }}\n              isDragging={isDragging}\n            />\n            <Droppable\n              info={{ id: id, dropArea: EDropArea.Right }}\n              isDragging={isDragging}\n            />\n          </div>\n\n          <div className=\"multi-droppable-sector bottom\">\n            <Droppable\n              info={{ id: id, dropArea: EDropArea.Bottom }}\n              isDragging={isDragging}\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"full-height\" style={{ opacity: isDragging ? 0.5 : 1 }}>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import { useDroppable } from \"@dnd-kit/core\";\nimport classNames from \"classnames\";\nimport React, {\n  MutableRefObject,\n  useCallback,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { Draggable, DraggableProps } from \"../draggable/draggable.component\";\nimport { Droppable } from \"../droppable/droppable.component\";\nimport { MultiDroppable } from \"../multi-droppable/multi-droppable.component\";\nimport {\n  IDoStartDragEventArgs,\n  LayoutResultContext,\n} from \"./layout-context.component\";\nimport { IDragInfo } from \"./layout.hook\";\nimport \"./layout.scss\";\n\nexport interface ILayout {\n  rows: ILayoutRow[];\n}\nexport const PRIVATE_SYMBOL = Symbol(\"PRIVATE_SYMBOL\");\ninterface ILayoutPrivateInfo {\n  tempId: string;\n}\nexport interface ILayoutCell {\n  [PRIVATE_SYMBOL]?: ILayoutPrivateInfo;\n  viewName?: string;\n  width?: number;\n  rows?: ILayoutRow[];\n}\n\nexport interface ILayoutRow {\n  [PRIVATE_SYMBOL]?: ILayoutPrivateInfo;\n  cells: ILayoutCell[];\n  height?: number;\n}\ninterface Props {\n  renderView: (props: {\n    viewName: string;\n    draggableProps: DraggableProps;\n  }) => JSX.Element;\n}\n\nexport const EMPTY_VIEW_NAME = \"Empty\";\n\nexport const Layout = ({ renderView }: Props): JSX.Element => {\n  const {\n    layout: { dragInfo: dragInfo, closeView, rows: layoutRows },\n    doDragStart: doStartDrag,\n  } = useContext(LayoutResultContext);\n  const rows: ILayoutRow[] = useMemo(() => {\n    return layoutRows.length\n      ? layoutRows\n      : [{ cells: [{ viewName: EMPTY_VIEW_NAME }] }];\n  }, [layoutRows]);\n\n  const notEmptyRows = useMemo(\n    () => rows.filter((f) => f.cells.length > 0),\n    [rows]\n  );\n\n  const renderCells = (cells: ILayoutCell[], nested = false): JSX.Element => {\n    const result = cells.map((cell: ILayoutCell, index): JSX.Element | null => {\n      return (\n        <LayoutCell\n          key={cell[PRIVATE_SYMBOL]?.tempId || index}\n          cell={cell}\n          renderCellContent={renderCellContent}\n          nested={nested}\n          onDragStart={handleDragStart}\n          dragInfo={dragInfo}\n          isLastCell={index + 1 === cells.length}\n        />\n      );\n    });\n    return <>{result}</>;\n  };\n\n  const handleDragStart = useCallback(\n    ({\n      node,\n      info,\n    }: {\n      node: MutableRefObject<HTMLElement | null>;\n      info: IDragInfo;\n    }) => {\n      if (node.current) {\n        doStartDrag({ node, info });\n      }\n    },\n    [doStartDrag]\n  );\n\n  const renderCellContent = (cell: ILayoutCell): JSX.Element => {\n    if (cell.rows?.length) {\n      return renderRows(cell.rows, true);\n    }\n    return renderViewComponent(cell.viewName as string);\n  };\n\n  const renderRows = (rows: ILayoutRow[], nested = false): JSX.Element => {\n    const result = rows.map((row, index) => {\n      return (\n        <LayoutRow\n          key={row[PRIVATE_SYMBOL]?.tempId || index}\n          row={row}\n          renderCells={renderCells}\n          nested={nested}\n          onDragStart={handleDragStart}\n          dragInfo={dragInfo}\n          isLastRow={index + 1 === rows.length}\n        />\n      );\n    });\n    return <div className=\"layout-rows\"> {result}</div>;\n  };\n\n  const renderViewComponent = (viewName: string): JSX.Element => {\n    return (\n      <div key={viewName} className={classNames(\"layout-view\")}>\n        <LayoutView\n          dragInfo={dragInfo}\n          onCloseClick={closeView}\n          viewName={viewName}\n          renderContent={(draggableProps) =>\n            renderView({ viewName, draggableProps })\n          }\n        />\n      </div>\n    );\n  };\n  return <div className=\"layout\">{renderRows(notEmptyRows)}</div>;\n};\n\ninterface ILayoutRowProps {\n  row: ILayoutRow;\n  isLastRow: boolean;\n  dragInfo: IDragInfo | undefined;\n  nested: boolean;\n  renderCells: (cells: ILayoutCell[], nested: boolean) => JSX.Element;\n  onDragStart: (props: IDoStartDragEventArgs) => void;\n}\nconst LayoutRow = ({\n  row,\n  dragInfo,\n  renderCells,\n  nested,\n  isLastRow,\n  onDragStart,\n}: ILayoutRowProps): JSX.Element => {\n  const { setNodeRef } = useDroppable({\n    id: JSON.stringify({ id: row[PRIVATE_SYMBOL]?.tempId }),\n  });\n  return (\n    <div\n      ref={setNodeRef}\n      className=\"layout-row full-height\"\n      style={{\n        height: row.height ? row.height + \"%\" : undefined,\n        minHeight: row.height ? row.height + \"%\" : undefined,\n        maxHeight: row.height ? row.height + \"%\" : undefined,\n      }}\n    >\n      <div className=\"layout-cells\">{renderCells(row.cells, nested)}</div>\n      {!isLastRow && (\n        <RowSeparator row={row} dragInfo={dragInfo} onDragStart={onDragStart} />\n      )}\n    </div>\n  );\n};\n\ninterface ILayoutCellProps {\n  cell: ILayoutCell;\n  isLastCell: boolean;\n  dragInfo: IDragInfo | undefined;\n  nested: boolean;\n  renderCellContent: (cell: ILayoutCell) => JSX.Element;\n  onDragStart: (props: IDoStartDragEventArgs) => void;\n}\nconst LayoutCell = ({\n  cell,\n  dragInfo,\n  nested,\n  renderCellContent,\n  isLastCell,\n  onDragStart,\n}: ILayoutCellProps): JSX.Element => {\n  const { setNodeRef } = useDroppable({\n    id: JSON.stringify({ id: cell[PRIVATE_SYMBOL]?.tempId }),\n  });\n  return (\n    <div\n      ref={setNodeRef}\n      style={{\n        flexBasis: cell.width ? cell.width + \"%\" : undefined,\n        maxWidth: cell.width ? cell.width + \"%\" : undefined,\n      }}\n      className={classNames(\"layout-cell\", {\n        \"root-level\": !nested,\n      })}\n    >\n      {renderCellContent(cell)}\n      {!isLastCell && (\n        <CellSeparator\n          cell={cell}\n          dragInfo={dragInfo}\n          onDragStart={onDragStart}\n        />\n      )}\n    </div>\n  );\n};\ninterface IRowSeparatorProps {\n  row: ILayoutRow;\n  dragInfo: IDragInfo | undefined;\n  onDragStart: (props: IDoStartDragEventArgs) => void;\n}\nconst RowSeparator = ({\n  row,\n  dragInfo,\n  onDragStart,\n}: IRowSeparatorProps): JSX.Element => {\n  const isDragging =\n    dragInfo?.type === \"resize-row\" &&\n    dragInfo.id === row[PRIVATE_SYMBOL]!.tempId;\n  return (\n    <Draggable\n      info={{ id: row[PRIVATE_SYMBOL]!.tempId, type: \"resize-row\" }}\n      className={classNames(\"layout-separator layout-separator-row\", {\n        dragging: isDragging,\n      })}\n      onDragStart={onDragStart}\n      isCustomDragElement={true}\n      renderContent={(draggableProps) => (\n        <div style={{ width: \"100%\" }} {...draggableProps}></div>\n      )}\n    >\n      {\" \"}\n    </Draggable>\n  );\n};\n\ninterface ICellSeparatorProps {\n  cell: ILayoutCell;\n  dragInfo: IDragInfo | undefined;\n  onDragStart: (props: IDoStartDragEventArgs) => void;\n}\nconst CellSeparator = ({\n  cell,\n  dragInfo,\n  onDragStart,\n}: ICellSeparatorProps): JSX.Element => {\n  const isDragging =\n    dragInfo?.type === \"resize-cell\" &&\n    dragInfo.id == cell[PRIVATE_SYMBOL]!.tempId;\n  return (\n    <Draggable\n      className={classNames(\"layout-separator layout-separator-cell\", {\n        dragging: isDragging,\n      })}\n      onDragStart={onDragStart}\n      info={{\n        id: cell[PRIVATE_SYMBOL]!.tempId,\n        type: \"resize-cell\",\n        viewName: cell.viewName,\n      }}\n      isCustomDragElement={true}\n      renderContent={(draggableProps) => (\n        <div style={{ width: \"100%\" }} {...draggableProps}></div>\n      )}\n    >\n      {\" \"}\n    </Draggable>\n  );\n};\n\ninterface ILayoutViewProps {\n  viewName: string;\n  dragInfo: IDragInfo | undefined;\n  onCloseClick: (viewName: string) => void;\n  renderContent: (draggableProps: DraggableProps) => JSX.Element;\n}\nconst LayoutView = ({\n  dragInfo,\n  viewName,\n  renderContent,\n}: ILayoutViewProps): JSX.Element => {\n  const isDragging = useMemo<boolean>(\n    () => !!(dragInfo?.id && dragInfo.type === \"move\"),\n    [dragInfo]\n  );\n\n  if (viewName === EMPTY_VIEW_NAME) {\n    return (\n      <Droppable info={{ id: viewName }} isDragging={isDragging}></Droppable>\n    );\n  }\n\n  return (\n    <MultiDroppable id={viewName} isDragging={isDragging}>\n      <Draggable\n        info={{ id: viewName, type: \"move\" }}\n        isCustomDragElement={true}\n        renderContent={renderContent}\n      >\n        {\" \"}\n      </Draggable>\n    </MultiDroppable>\n  );\n};\n","import { DndContext, Modifier } from \"@dnd-kit/core\";\nimport { LayoutRectMap } from \"@dnd-kit/core/dist/store\";\nimport { LayoutRect } from \"@dnd-kit/core/dist/types\";\nimport React, { MutableRefObject, ReactNode, useMemo, useRef } from \"react\";\nimport { EDropArea } from \"../multi-droppable/multi-droppable.component\";\nimport { EMPTY_VIEW_NAME } from \"./layout.component\";\nimport {\n  IDragInfo,\n  IDropInfo,\n  ILayoutRect,\n  ILayoutResult,\n} from \"./layout.hook\";\n\ninterface Props {\n  layout: ILayoutResult;\n  children: ReactNode;\n}\n\nexport const LayoutContext = ({ layout, children }: Props): JSX.Element => {\n  const { setDragInfo, moveView, resizeCell, resizeRow, dragInfo } = layout;\n  const parentSizeRef = useRef<LayoutRect | undefined>();\n  const currentSizeRef = useRef<LayoutRect | undefined>();\n  const draggableElementRef = useRef<HTMLElement | null>();\n  const layoutRectMapRef = useRef<LayoutRectMap | null>();\n\n  const layoutContext = useMemo<ILayoutContext>((): ILayoutContext => {\n    return {\n      layout,\n      doDragStart: ({ node, info }) => {\n        draggableElementRef.current = node.current;\n\n        if (node.current && info.type === \"resize-cell\") {\n          const parent = findParentByClassName(node.current, \"layout-cells\");\n          if (parent) {\n            parentSizeRef.current = {\n              offsetLeft: parent?.offsetLeft || 0,\n              offsetTop: parent?.offsetTop || 0,\n              width: parent?.offsetWidth || 0,\n              height: parent?.offsetHeight || 0,\n            };\n          }\n        } else if (node.current && info.type === \"resize-row\") {\n          const parent = findParentByClassName(node.current, \"layout-rows\");\n          if (parent) {\n            parentSizeRef.current = {\n              offsetLeft: parent?.offsetLeft || 0,\n              offsetTop: parent?.offsetTop || 0,\n              width: parent?.offsetWidth || 0,\n              height: parent?.offsetHeight || 0,\n            };\n          }\n        }\n      },\n    };\n  }, [layout]);\n\n  const handleClear = () => {\n    draggableElementRef.current = undefined;\n    currentSizeRef.current = undefined;\n    parentSizeRef.current = undefined;\n    layoutRectMapRef.current = undefined;\n    setDragInfo(undefined);\n  };\n\n  const getLayoutRectangles = (): ILayoutRect[] => {\n    if (!layoutRectMapRef.current) {\n      return [];\n    }\n    const keys = Array.from(layoutRectMapRef.current!.keys());\n    return keys.map<ILayoutRect>(\n      (key): ILayoutRect => {\n        const rect = layoutRectMapRef.current!.get(key);\n\n        const dropInfo = JSON.parse(key);\n        return {\n          info: dropInfo,\n          rect: rect!,\n        };\n      }\n    );\n  };\n\n  const modifier: Modifier = ({ transform, draggingNodeRect }) => {\n    if (dragInfo) {\n      if (parentSizeRef.current && draggingNodeRect) {\n        if (dragInfo.type === \"resize-cell\") {\n          // console.log({\n          // \tparent: parentSizeRef.current,\n          // \tright: draggingNodeRect.right,\n          // \tdraggingNodeRect,\n          // \tcontainerNodeRect,\n          // \tactiveNodeRect,\n          // \ttransform,\n          // });\n\n          return {\n            ...transform,\n          };\n        }\n      }\n    }\n    return {\n      ...transform,\n    };\n  };\n\n  return (\n    <DndContext\n      modifiers={[modifier]}\n      onDragStart={(e) => {\n        setDragInfo(\n          e.active.id ? (JSON.parse(e.active.id) as IDragInfo) : undefined\n        );\n      }}\n      onDragMove={({ droppableRects }) => {\n        layoutRectMapRef.current = droppableRects;\n        currentSizeRef.current = {\n          offsetLeft: draggableElementRef.current?.offsetLeft || 0,\n          offsetTop: draggableElementRef.current?.offsetTop || 0,\n          width: draggableElementRef.current?.offsetWidth || 0,\n          height: draggableElementRef.current?.offsetHeight || 0,\n        };\n      }}\n      onDragEnd={({ over, active, delta }) => {\n        const dragInfo = JSON.parse(active.id) as IDragInfo;\n\n        if (dragInfo.type === \"resize-cell\") {\n          if (parentSizeRef.current && currentSizeRef.current) {\n            resizeCell({\n              info: dragInfo,\n              parentRect: parentSizeRef.current,\n              currentRect: currentSizeRef.current,\n              layoutRectangles: getLayoutRectangles(),\n              delta,\n            });\n          }\n        } else if (\n          dragInfo.type === \"resize-row\" &&\n          parentSizeRef.current &&\n          currentSizeRef.current\n        ) {\n          resizeRow({\n            info: dragInfo,\n            parentRect: parentSizeRef.current,\n            currentRect: currentSizeRef.current,\n            layoutRectangles: getLayoutRectangles(),\n            delta,\n          });\n        }\n\n        if (over?.id) {\n          const dropInfo = JSON.parse(over.id) as IDropInfo;\n\n          if (dragInfo.type === \"move\") {\n            if (dropInfo.id === EMPTY_VIEW_NAME) {\n              moveView(dragInfo.id, EMPTY_VIEW_NAME, EDropArea.Top);\n            } else {\n              moveView(\n                dragInfo.id,\n                dropInfo.id,\n                dropInfo.dropArea as EDropArea\n              );\n            }\n          }\n        }\n        handleClear();\n      }}\n      onDragCancel={handleClear}\n    >\n      <LayoutResultContext.Provider value={layoutContext}>\n        {children}\n      </LayoutResultContext.Provider>\n    </DndContext>\n  );\n};\n\ninterface ILayoutContext {\n  layout: ILayoutResult;\n  doDragStart: (props: {\n    node: React.MutableRefObject<HTMLElement | null>;\n    info: IDragInfo;\n  }) => void;\n}\nexport interface IDoStartDragEventArgs {\n  node: MutableRefObject<HTMLElement | null>;\n  info: IDragInfo;\n}\nexport const LayoutResultContext = React.createContext<ILayoutContext>({\n  layout: (undefined as unknown) as ILayoutResult,\n  doDragStart: (props: IDoStartDragEventArgs) => {\n    console.log(props);\n  },\n});\n\nconst findParentByClassName = (\n  element: HTMLElement,\n  className: string\n): HTMLElement | undefined => {\n  if (element.className.includes(className)) {\n    return element;\n  }\n  if (element.parentNode) {\n    return findParentByClassName(element.parentNode as HTMLElement, className);\n  }\n};\n","let IDX = 0;\nexport const generateUID = (): string => `id_${IDX++}`;\n","import { Coordinates, LayoutRect } from \"@dnd-kit/core/dist/types\";\nimport { useMemo, useState } from \"react\";\nimport { generateUID } from \"../generate-uid.util\";\nimport { EDropArea } from \"../multi-droppable/multi-droppable.component\";\nimport {\n  EMPTY_VIEW_NAME,\n  ILayout,\n  ILayoutCell,\n  ILayoutRow,\n  PRIVATE_SYMBOL,\n} from \"./layout.component\";\n\ninterface IProps {\n  allViewNames: string[];\n  defaultLayout: ILayout;\n}\n\nexport interface IDragInfo {\n  id: string;\n  viewName?: string;\n  type: \"move\" | \"resize-cell\" | \"resize-row\";\n}\n\nexport interface IDropInfo {\n  id: string;\n  dropArea?: EDropArea | undefined;\n}\n\nexport interface ILayoutRect {\n  info: IDropInfo;\n  rect: LayoutRect;\n}\nexport interface ILayoutResult {\n  rows: ILayoutRow[];\n  moveView: (fromView: string, toView: string, position: EDropArea) => void;\n  closeView: (view: string) => void;\n  resetLayout: () => void;\n  hiddenViews: string[];\n  dragInfo: IDragInfo | undefined;\n  setDragInfo: (dragInfo: IDragInfo | undefined) => void;\n  resizeCell: (props: {\n    info: IDragInfo;\n    delta: Coordinates;\n    parentRect: LayoutRect;\n    currentRect: LayoutRect;\n    layoutRectangles: ILayoutRect[];\n  }) => void;\n  resizeRow: (props: {\n    info: IDragInfo;\n    delta: Coordinates;\n    parentRect: LayoutRect;\n    currentRect: LayoutRect;\n    layoutRectangles: ILayoutRect[];\n  }) => void;\n}\n\ninterface IFindViewResult {\n  row: ILayoutRow;\n  rows: ILayoutRow[];\n  cell: ILayoutCell;\n  rowIndex: number;\n  cellIndex: number;\n}\n\nconst MAX_PERCENTAGE = 90;\nconst MIN_PERCENTAGE = 10;\nconst MARGIN = 8;\nexport const useLayout = ({\n  defaultLayout,\n  allViewNames: allViews,\n}: IProps): ILayoutResult => {\n  const [rows, setRows] = useState<ILayoutRow[]>(\n    normalizeLayout(JSON.parse(JSON.stringify(defaultLayout.rows)))\n  );\n  const [dragInfo, setDragInfo] = useState<IDragInfo | undefined>(undefined);\n\n  return useMemo(() => {\n    return {\n      resizeCell: (props) => {\n        const findResult = findByTempId(rows, props.info.id);\n        const rectangles = props.layoutRectangles.filter((rectangle) =>\n          findResult?.row.cells.some(\n            (cell) => cell[PRIVATE_SYMBOL]?.tempId === rectangle.info.id\n          )\n        );\n        //update width for all cells except next\n        for (let i = 0, len = findResult?.row.cells.length || 0; i < len; ++i) {\n          const cell = findResult!.row.cells[i];\n          // don't update width for next cell - always reset next row (avoid problem with more than 100%)\n          if (i === findResult!.cellIndex! + 1) {\n            cell!.width = undefined;\n          } else {\n            //if not active cell already has width - don't recalculate\n            if (cell !== findResult!.cell && cell.width) {\n              continue;\n            }\n            const cellRect =\n              cell == findResult?.cell\n                ? props.currentRect\n                : rectangles.find(\n                    (rectangle) =>\n                      rectangle.info.id === cell[PRIVATE_SYMBOL]?.tempId\n                  )!.rect;\n            const percentage =\n              ((cellRect!.width + MARGIN) / props.parentRect.width) * 100;\n\n            console.log(\"resize-cell\", props, {\n              cellRect,\n              percentage,\n              findResult,\n              rectangles,\n            });\n            cell!.width = Math.max(\n              Math.min(percentage, MAX_PERCENTAGE),\n              MIN_PERCENTAGE\n            );\n          }\n        }\n      },\n      resizeRow: (props) => {\n        const findResult = findByTempId(rows, props.info.id);\n\n        const rectangles = props.layoutRectangles.filter((rectangle) =>\n          findResult?.rows.some(\n            (row) => row[PRIVATE_SYMBOL]?.tempId === rectangle.info.id\n          )\n        );\n        for (let i = 0, len = findResult?.rows.length || 0; i < len; ++i) {\n          const row = findResult?.rows[i];\n\n          // don't update height for next row - always reset next row  (avoid problem with more than 100%)\n          if (i === findResult!.rowIndex + 1) {\n            row!.height = undefined;\n          } else {\n            //if not active row already has height - don't recalculate\n            if (row !== findResult!.row && row?.height) {\n              continue;\n            }\n            const rowRect =\n              row == findResult?.row\n                ? props.currentRect\n                : rectangles.find(\n                    (rectangle) =>\n                      rectangle.info.id === row?.[PRIVATE_SYMBOL]?.tempId\n                  )!.rect;\n\n            const percentage =\n              ((rowRect.height + MARGIN) / props.parentRect.height) * 100;\n\n            console.log(\"resize-row\", props, {\n              rowRect,\n              percentage,\n              findResult,\n              rectangles,\n            });\n            row!.height = Math.max(\n              Math.min(percentage, MAX_PERCENTAGE),\n              MIN_PERCENTAGE\n            );\n          }\n        }\n      },\n      rows: normalizeLayout(rows),\n\n      hiddenViews: allViews.filter(\n        (view) => findView(rows, view) === undefined\n      ),\n\n      moveView: (\n        fromViewName: string,\n        toViewName: string,\n        position: EDropArea\n      ) => {\n        let newRows: ILayoutRow[] = cloneRows(rows);\n\n        if (toViewName === EMPTY_VIEW_NAME) {\n          newRows.push({\n            cells: [{ viewName: fromViewName }],\n          });\n        } else {\n          const toView = findView(newRows, toViewName);\n          if (toView) {\n            const fromView = findView(newRows, fromViewName);\n            if (fromView) {\n              fromView.row.cells = fromView.row.cells.filter(\n                (cell) => cell.viewName !== fromViewName\n              );\n            }\n            switch (position) {\n              case EDropArea.Top: {\n                if (toView.row.cells.length > 1) {\n                  toView.row.cells = toView.row.cells.map((c) => {\n                    if (c === toView.cell) {\n                      return {\n                        viewName: undefined,\n                        rows: [\n                          {\n                            cells: [\n                              {\n                                viewName: fromViewName,\n                              },\n                            ],\n                          },\n                          {\n                            cells: [\n                              {\n                                viewName: toViewName,\n                              },\n                            ],\n                          },\n                        ],\n                      };\n                    }\n                    return c;\n                  });\n                } else {\n                  toView.rows.splice(toView.rowIndex, 0, {\n                    cells: [{ viewName: fromViewName }],\n                  });\n                }\n                break;\n              }\n              case EDropArea.Bottom: {\n                if (toView.row.cells.length > 1) {\n                  toView.row.cells = toView.row.cells.map((c) => {\n                    if (c === toView.cell) {\n                      return {\n                        viewName: undefined,\n                        rows: [\n                          {\n                            cells: [\n                              {\n                                viewName: toViewName,\n                              },\n                            ],\n                          },\n                          {\n                            cells: [\n                              {\n                                viewName: fromViewName,\n                              },\n                            ],\n                          },\n                        ],\n                      };\n                    }\n                    return c;\n                  });\n                } else {\n                  toView.rows.splice(toView.rowIndex + 1, 0, {\n                    cells: [{ viewName: fromViewName }],\n                  });\n                }\n                break;\n              }\n              case EDropArea.Left:\n                toView.row.cells.splice(toView.cellIndex, 0, {\n                  viewName: fromViewName,\n                });\n                break;\n              case EDropArea.Right:\n                toView.row.cells.splice(toView.cellIndex + 1, 0, {\n                  viewName: fromViewName,\n                });\n                break;\n            }\n          }\n        }\n        newRows = normalizeLayout(newRows);\n        setRows(newRows);\n      },\n      closeView: (view: string) => {\n        let newRows = cloneRows(rows);\n        const result = findView(newRows, view);\n        if (result) {\n          result.row.cells = result.row.cells.filter(\n            (cell) => cell.viewName !== view\n          );\n          newRows = normalizeLayout(newRows);\n          setRows(newRows);\n        }\n      },\n      resetLayout: () => {\n        let newRows = cloneRows(defaultLayout.rows);\n        newRows = normalizeLayout(newRows);\n        setRows(newRows);\n      },\n      dragInfo,\n      setDragInfo,\n    };\n  }, [rows, defaultLayout, allViews, dragInfo]);\n};\n\n// helper functions\nconst cloneRows = (layout: ILayoutRow[]): ILayoutRow[] =>\n  JSON.parse(JSON.stringify(layout));\n\nconst findViewInCells = ({\n  rows,\n  row,\n  rowIndex,\n  view,\n}: {\n  rows: ILayoutRow[];\n  row: ILayoutRow;\n  rowIndex: number;\n  view: string;\n}): IFindViewResult | undefined => {\n  let result = undefined;\n  for (\n    let cellIndex = 0, len = row.cells.length;\n    cellIndex < len;\n    ++cellIndex\n  ) {\n    const cell = row.cells[cellIndex];\n    if (cell.viewName === view) {\n      result = {\n        rows,\n        row,\n        cell,\n        rowIndex,\n        cellIndex,\n      } as IFindViewResult;\n      break;\n    } else {\n      result = findView(cell.rows || [], view);\n    }\n    if (result) {\n      break;\n    }\n  }\n  return result;\n};\n\nconst findView = (\n  rows: ILayoutRow[],\n  view: string\n): IFindViewResult | undefined => {\n  let result = undefined;\n  for (let rowIndex = 0, len = rows.length; rowIndex < len; ++rowIndex) {\n    const row = rows[rowIndex];\n    result = findViewInCells({ rows, row, rowIndex, view });\n    if (result) {\n      break;\n    }\n  }\n  return result;\n};\n\nconst normalizeLayout = (rows: ILayoutRow[]): ILayoutRow[] => {\n  let result = removeExtraRowsAndEmptyCells(rows);\n  result = removeWidthAndHeight(result);\n  return result;\n};\n\nconst removeExtraRowsAndEmptyCells = (rows: ILayoutRow[]): ILayoutRow[] => {\n  const result: ILayoutRow[] = [];\n  rows.forEach((row) => {\n    const temp = removeExtraRowsAndEmptyCellsInternal({ row, rows }).filter(\n      (f) => f\n    );\n    result.push(...temp);\n  });\n  return result;\n};\n\nconst removeWidthAndHeight = (rows: ILayoutRow[]): ILayoutRow[] => {\n  const result: ILayoutRow[] = [];\n  rows.forEach((row) => {\n    const temp = removeWidthAndHeightInternal({ row, rows }).filter((f) => f);\n    result.push(...temp);\n  });\n  return result;\n};\n\nconst removeExtraRowsAndEmptyCellsInternal = ({\n  row,\n  rows,\n}: {\n  row: ILayoutRow;\n  rows: ILayoutRow[];\n}): ILayoutRow[] => {\n  if (!row.cells || row.cells.length === 0) {\n    return [];\n  }\n\n  let currentRow: ILayoutRow = { ...row };\n  if (!currentRow[PRIVATE_SYMBOL]) {\n    currentRow[PRIVATE_SYMBOL] = {\n      tempId: generateUID(),\n    };\n  }\n\n  // move row from child to parent (remove extra row)\n  if (\n    rows?.length === 1 &&\n    currentRow.cells.length === 1 &&\n    !currentRow.cells[0].viewName &&\n    currentRow.cells[0].rows?.length\n  ) {\n    return removeExtraRowsAndEmptyCells(currentRow.cells[0].rows!);\n  }\n\n  // TODO investigate more simple algorithm\n  for (let i = 0; i < currentRow.cells?.length; ++i) {\n    const childCell = currentRow.cells[i];\n    if (!childCell[PRIVATE_SYMBOL]) {\n      childCell[PRIVATE_SYMBOL] = {\n        tempId: childCell.viewName\n          ? childCell.viewName + \"temp-id\"\n          : generateUID(),\n      };\n    }\n\n    //call recursive same function\n    if (childCell.rows?.length) {\n      childCell.rows = removeExtraRowsAndEmptyCells(childCell.rows);\n    }\n\n    //move cell from child to parent\n    if (childCell.rows?.length == 1 && childCell.rows[0].cells?.length === 1) {\n      currentRow.cells[i] = childCell.rows[0].cells[0];\n      i = -1;\n      continue;\n    }\n\n    // move row from child to parent\n    if (currentRow.cells.length === 1 && childCell.rows?.length === 1) {\n      const [childRow] = childCell.rows;\n      currentRow = childRow;\n      i = -1;\n      continue;\n    }\n\n    // remove empty cell\n    if (childCell.rows?.length === 0 && childCell.viewName === undefined) {\n      currentRow.cells = currentRow.cells.filter((f) => f !== childCell);\n      i = -1;\n      continue;\n    }\n  }\n\n  return [currentRow];\n};\n\nconst removeWidthAndHeightInternal = ({\n  row,\n  rows,\n}: {\n  row: ILayoutRow;\n  rows: ILayoutRow[];\n}): ILayoutRow[] => {\n  if (!row.cells || row.cells.length === 0) {\n    return [];\n  }\n\n  const currentRow: ILayoutRow = { ...row };\n\n  // TODO investigate more simple algorithm\n  for (let i = 0; i < currentRow.cells?.length; ++i) {\n    const childCell = currentRow.cells[i];\n\n    //call recursive same function\n    if (childCell.rows?.length) {\n      childCell.rows = removeWidthAndHeight(childCell.rows);\n    }\n\n    // remove width if only one cell\n    if (childCell.width !== undefined && currentRow.cells.length === 1) {\n      childCell.width = undefined;\n    }\n  }\n\n  // remove height if only one row\n  if (currentRow?.height !== undefined && rows?.length === 1) {\n    currentRow.height = undefined;\n  }\n\n  // remove last width if all other cells has any width\n  const allCellsHasWidth =\n    currentRow.cells.filter((f) => f.width).length === currentRow.cells.length;\n  if (allCellsHasWidth && currentRow.cells.length > 0) {\n    currentRow.cells[currentRow.cells.length - 1].width = undefined;\n  }\n  // remove last height if all another rows has any height\n  const allRowsHasHeight = rows.filter((f) => f.height).length === rows.length;\n  if (allRowsHasHeight && rows.length > 0) {\n    rows[rows.length - 1].height = undefined;\n  }\n\n  return [currentRow];\n};\n\nconst findByTempId = (\n  rows: ILayoutRow[],\n  tempId: string\n):\n  | {\n      row: ILayoutRow;\n      rows: ILayoutRow[];\n      rowIndex: number;\n      cellIndex?: number;\n      cell?: ILayoutCell;\n    }\n  | undefined => {\n  let result: ReturnType<typeof findByTempId> = undefined;\n  rows.some((row, rowIndex) => {\n    if (row[PRIVATE_SYMBOL]?.tempId === tempId) {\n      result = {\n        rowIndex,\n        row,\n        rows,\n      };\n      return row;\n    }\n    if (row.cells?.length) {\n      row.cells.some((cell, cellIndex) => {\n        if (cell[PRIVATE_SYMBOL]?.tempId === tempId) {\n          result = {\n            row,\n            rows,\n            rowIndex,\n            cell,\n            cellIndex,\n          };\n          return result;\n        }\n        if (cell.rows) {\n          result = findByTempId(cell.rows, tempId);\n          return result;\n        }\n      });\n    }\n  });\n  return result;\n};\n","import classNames from \"classnames\";\nimport { useCallback } from \"react\";\nimport { Card } from \"../lib/card/card.component\";\nimport { Draggable } from \"../lib/draggable/draggable.component\";\nimport { Icon, ICONS } from \"../lib/icon.component\";\nimport { LayoutContext } from \"../lib/layout/layout-context.component\";\nimport { ILayout, Layout } from \"../lib/layout/layout.component\";\nimport { useLayout } from \"../lib/layout/layout.hook\";\n\nexport const EViewName = {\n  JSON: \"JSON\",\n  CodeEditor: \"CodeEditor\",\n  Terminal: \"Terminal\",\n  SolutionExplorer: \"SolutionExplorer\",\n  Questions: \"Questions\",\n  Chat: \"Chat\",\n};\n\nconst EXAMPLE_LAYOUT: ILayout = {\n  rows: [\n    {\n      cells: [\n        {\n          width: 25,\n          rows: [\n            {\n              height: 75,\n              cells: [{ viewName: EViewName.SolutionExplorer }],\n            },\n            {\n              cells: [\n                { viewName: EViewName.CodeEditor },\n                { viewName: EViewName.Terminal },\n              ],\n            },\n          ],\n        },\n        {\n          rows: [\n            {\n              cells: [{ viewName: EViewName.JSON }],\n            },\n            {\n              cells: [{ viewName: EViewName.Questions }],\n            },\n          ],\n        },\n        { viewName: EViewName.Chat },\n      ],\n    },\n  ],\n};\n\nexport function ExampleFull(): JSX.Element {\n  const layout = useLayout({\n    allViewNames: Object.values(EViewName),\n    defaultLayout: EXAMPLE_LAYOUT,\n  });\n  const { rows, closeView, resetLayout, hiddenViews, dragInfo } = layout;\n\n  const handleCloseClick = useCallback(\n    (view: string) => {\n      closeView(view);\n    },\n    [closeView]\n  );\n\n  const handleResetLayout = useCallback(() => {\n    resetLayout();\n  }, [resetLayout]);\n\n  return (\n    <LayoutContext layout={layout}>\n      <div>\n        example full\n        <button onClick={handleResetLayout}>Reset layout</button>\n        <div>\n          {hiddenViews.map((viewName) => (\n            <Draggable\n              key={viewName}\n              info={{ id: viewName, type: \"move\" }}\n              isCustomDragElement={true}\n              renderContent={(draggableProps): JSX.Element => {\n                return (\n                  <div\n                    className={classNames(\"cursor-move\", {\n                      dragging: !!dragInfo,\n                    })}\n                    {...draggableProps}\n                  >\n                    <Icon name={ICONS.DRAG_HANDLE} color={\"white\"} size={16} />\n                    <div className=\"card-title\">{viewName}</div>\n                  </div>\n                );\n              }}\n            />\n          ))}\n        </div>\n      </div>\n      <Layout\n        renderView={({ viewName, draggableProps }): JSX.Element => (\n          <Card\n            leftIcon={\n              <div className=\"card-header-icon\" {...draggableProps}>\n                <Icon name={ICONS.DRAG_HANDLE} color={\"white\"} size={16} />\n              </div>\n            }\n            title={viewName}\n            className=\"flex-grow-1\"\n            onCloseClick={() => handleCloseClick(viewName)}\n          >\n            <pre style={{ display: \"block\" }}>\n              {JSON.stringify(rows || {}, null, 2)}\n            </pre>\n          </Card>\n        )}\n      />\n    </LayoutContext>\n  );\n}\n","import { Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ExampleFull } from \"./example-full.component\";\nimport \"./index.css\";\n\nconst App: React.FC = () => {\n  return (\n    <Suspense fallback=\"\">\n      <div className=\"App\" style={{ pointerEvents: \"auto\" }}>\n        <Router>\n          <Switch>\n            <Route path=\"/\">\n              <ExampleFull />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </Suspense>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./example/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}