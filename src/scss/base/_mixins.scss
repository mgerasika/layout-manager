
// From _colors.scss
@mixin shadow-popover() {
	-moz-box-shadow: 0 2px 3px 1px rgba(0, 0, 0, 0.1);
	-webkit-box-shadow: 0 2px 3px 1px rgba(0, 0, 0, 0.1);
	box-shadow: 0 2px 3px 1px rgba(8, 8, 8, 0.1);
}

// From _layout.scss
@mixin radius-16 {
	border-radius: 16px;
}

@mixin radius-12 {
	border-radius: 12px;
}

@mixin radius-8 {
	border-radius: 8px;
}

@mixin radius-4 {
	border-radius: 4px;
}

@mixin radius-full {
	border-radius: 100px;
}

@mixin radius-32 {
	border-radius: 32px;
}

@mixin flex-between {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

@mixin flex-center {
	display: flex;
	justify-content: center;
	align-items: center;
}

@mixin absolute-fill {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

// From _mixins-responsive.scss

/************************************************************
Responsive mixins

Usage:
@include break-min($break-sm) {STYLES}
In the example above STYLES will be rendered when the viewport is 640px or greater

************************************************************/

// Width reference (variables defined in _vars-global.scss)
// $break-xs = 480px
// $break-sm = 640px
// $break-med = 768px
// $break-lrg = 1024px
// $break-xlrg = 1120px;

@mixin break-min($point) {
	@media screen and (min-width: $point) {
		@content;
	}
}

@mixin break-max($point) {
	@media screen and (max-width: $point) {
		@content;
	}
}

@mixin break-min-height($point) {
	@media screen and (min-height: $point) {
		@content;
	}
}

@mixin break-max-height($point) {
	@media screen and (max-height: $point) {
		@content;
	}
}

@mixin orientation($orientation) {
	@media only screen and (orientation: $orientation) {
		@content;
	}
}

@mixin break-between($min, $max) {
	@media only screen and (min-width: $min) and (max-width: $max) {
		@content;
	}
}
